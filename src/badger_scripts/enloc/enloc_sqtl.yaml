---
definitions:
  command: "#perl bin/enloc"
  template: enloc.jinja

  copy_to_item: true

  default_arguments:
    job_memory: "32gb"
    job_walltime: "124:00:00"
    logs_folder: logs_enloc_b

  submission:
    !PBSQueue
      jobs_folder: jobs_enloc_b
      job_name_key: job_name
      #fake_submission: true

  constants:
    bin: &BIN_K /scratch/abarbeira3/v8_process/enloc/sqtl/bin
    dapg_runs: &DAPG_RUNS_K /scratch/abarbeira3/v8_process/dapg/sqtl/results/enloc_ready_maf0.01_w1000000
    gwas: &SLICED_GWAS_K /scratch/abarbeira3/v8_process/slice/results
    output_folder: &OUTPUT_FOLDER_K results

    whitelist: &WHITE_LIST /gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/data/tissues_c.txt

  #Kind of ugly kink... need to add support for configurable inline template to pick up from configuration, to avoid duplicating "results"
  pre_command:
  - '[ -d results ] || mkdir -p results'

sub_configuration:
  -
    how: before_arguments
    path: enloc_sqtl_tissue_spec.yaml

arguments:
  - !Scalar { name: bin, value: *BIN_K }

  - !Scalar { name: FOLDER, value: *OUTPUT_FOLDER_K }

  - !FilesInFolder
    name: gwas_path
    sort: true
    folder: *SLICED_GWAS_K
    regexp_filter: "sliced_(.*).txt.gz"
    metadata_rules: [ !ExtractFromFileNameRegexpMetadata {path: gwas/tag} ]

  - !FilesInFolder
    name: tissue_folder
    sort: true
    folder: *DAPG_RUNS_K
    regexp_filter: "(.*)"
    metadata_rules: [ !ExtractFromFileNameRegexpMetadata {path: tissue/name} ]

  #- !Whitelist { list_from_file: *WHITE_LIST, in_metadata_path: "tissue/name" }

  - !ArgumentFromMetadata
    {name: job_memory, sub_key: memory, options_from_metadata_path: __configuration/enloc_sqtl_tissue_info,
    sources: [ {path: tissue/name} ]}

  - !ArgumentFromMetadata
    {name: job_walltime, sub_key: walltime, options_from_metadata_path: __configuration/enloc_sqtl_tissue_info,
    sources: [ {path: tissue/name} ]}

  - !ArgumentFromMetadata
    name: output_key
    format_rule: "{gwas}__PM__{tissue}"
    sources: [
      {path: tissue/name, destination: tissue},
      {path: gwas/tag, destination: gwas}
    ]
    metadata_rules: [ !SaveValueInMetadata {path: "output_key"} ]

  - !ArgumentFromMetadata
    name: output_folder
    prepend: *OUTPUT_FOLDER_K
    format_rule: "{output_key}"
    sources: [ {path: output_key, destination: output_key} ]

  - !ArgumentFromMetadata
    name: gwas_name
    format_rule: "{gwas}"
    sources: [ {path: gwas/tag, destination: gwas} ]

  - !ArgumentFromMetadata
    name: "job_name"
    format_rule: "gtexv8_enloc_{gwas}__PM__{tissue}"
    sources:
    sources: [
      {path: tissue/name, destination: tissue},
      {path: gwas/tag, destination: gwas}
    ]
