---
definitions:
  command: "python3 /gpfs/data/im-lab/nas40t2/abarbeira/software/genomic_tools/genomic_tools/src/run_susier.py"
  template: susier.jinja

  copy_to_item: true

  default_arguments:
    job_memory: "16gb"
    job_walltime: "48:00:00"
    logs_folder: logs
    n_cpu: 1

  submission:
    !PBSQueue
      jobs_folder: jobs
      job_name_key: job_name
      #fake_submission: true

  constants:
    splits: &SPLITS_K 80

    individuals_folder: &INDIVIDUALS_FOLDER_K /gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/data/individuals
    genotype_folder: &GENOTYPE_FOLDER_K /gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/data_formatting/model_training_to_parquet/results/parquet_eur_maf0.01_biallelic
    genotype_pattern: &GENOTYPE_PATTERN_K '"gtex_v8_eur_itm.(chr\d+).variants.parquet"'
    variants_metadata: &VARIANTS_METADATA_K /gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/data_formatting/model_training_to_parquet/results/parquet_eur_maf0.01_biallelic/gtex_v8_eur_itm.variants_metadata.parquet
    tissues: &TISSUES_K /gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/data/tissues_c.txt
    #eqtl_folder: &SQTL_FOLDER_K /scratch/abarbeira3/v8_process/sqtl_split/results_pp
    sqtl_folder: &SQTL_FOLDER_K /scratch/abarbeira3/v8_process/sqtl_split/results

  #Kind of ugly kink... need to add support for configurable inline template to pick up from configuration, to avoid duplicating "results"
  pre_command:
  - '[ -d results ] || mkdir -p results'

sub_configuration:
  -
    how: before_arguments
    path: gtex_info.yaml
#  -
#    how: before_arguments
#    path: susier_eqtl_spec.yaml

arguments:
  - !Scalar { name: parquet_genotype_folder, prefix: "-parquet_genotype_folder", value: *GENOTYPE_FOLDER_K }
  - !Scalar { name: parquet_genotype_pattern, prefix: "-parquet_genotype_pattern", value: *GENOTYPE_PATTERN_K }
  - !Scalar { name: parquet_genotype_metadata, prefix: "-parquet_genotype_metadata", value: *VARIANTS_METADATA_K }

  - !Scalar { name: parsimony, prefix: "-parsimony", value: "8" }

  - !Range { name: chromosome, start: 1, end: 23,
    metadata_rules: [ !SaveValueInMetadata {path: "job/chromosome"} ] }

  - !Range { name: split, start: 0, end: *SPLITS_K,
    metadata_rules: [ !SaveValueInMetadata {path: "job/split"} ] }

  - !Range { name: tissue, file_list: *TISSUES_K,
      metadata_rules: [ !SaveValueInMetadata { path: tissue/name } ]
   }

########################################################################################################################

  - !ArgumentFromMetadata
    name: key
    format_rule: "{chromosome}_{split}"
    sources: [ {path: job/chromosome, destination: chromosome}, {path: job/split, destination: split}]
    metadata_rules: [ !SaveValueInMetadata {path: "job/key"} ]

  - !Blacklist
    name: exclude_hard_jobs
    using_list: ["6_14", "6_15", "6_17", "6_18", "6_19", "6_20", "6_21", "6_22"]
    in_metadata_path: "job/key"

#  - !ArgumentFromMetadata
#    name: job_memory
#    options_from_metadata_path: __configuration/spec
#    sub_key: memory
#    sources: [ {path: job/key} ]
#
#  - !ArgumentFromMetadata
#    name: job_walltime
#    options_from_metadata_path: __configuration/spec
#    sub_key: walltime
#    sources: [ {path: job/key} ]

########################################################################################################################

  - !ArgumentFromMetadata
    {name: eqtl, prefix: "-eqtl", prepend: *SQTL_FOLDER_K, format_rule: "{tissue}__chr{chr}_{split}.txt.gz",
    sources: [ {path: job/chromosome, destination: chr}, {path: job/split, destination: split}, {path: tissue/name, destination: tissue} ]}

  - !ArgumentFromMetadata
    {name: sample_size, prefix: "-sample_size", sub_key: gtex_sample_size, options_from_metadata_path: __configuration/gtex_info,
    sources: [ {path: tissue/name} ]}

  - !ArgumentFromMetadata
    {name: restrict_to_individuals, prefix: "-restrict_to_individuals", prepend: *INDIVIDUALS_FOLDER_K, format_rule: "{tissue}.txt",
    sources: [ {path: tissue/name, destination: tissue} ]}

  - !ArgumentFromMetadata
    name: cs_output
    prefix: "-cs_output"
    prepend: "results"
    format_rule: "{tissue}__chr{chr}_{split}_cs.txt.gz"
    sources: [ {path: job/chromosome, destination: chr}, {path: job/split, destination: split}, {path: tissue/name, destination: tissue} ]

  - !ArgumentFromMetadata
    name: var_output
    prefix: "-var_output"
    prepend: "results"
    format_rule: "{tissue}__chr{chr}_{split}_vars.txt.gz"
    sources: [ {path: job/chromosome, destination: chr}, {path: job/split, destination: split}, {path: tissue/name, destination: tissue} ]


  - !ArgumentFromMetadata
    name: "job_name"
    format_rule: "{tissue}__chr{chr}_{split}_susier_sqtl"
    sources: [ {path: job/chromosome, destination: chr}, {path: job/split, destination: split}, {path: tissue/name, destination: tissue} ]