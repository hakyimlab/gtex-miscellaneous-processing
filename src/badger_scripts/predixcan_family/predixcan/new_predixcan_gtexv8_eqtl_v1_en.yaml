---
definitions:
  #a modified predixcan that creates output folder if non-existing is needed
  command: python3 /gpfs/data/im-lab/nas40t2/abarbeira/software/MetaXcan/software/Predict.py

  template: new_predixcan.jinja
  default_arguments:
    job_memory: "4gb"
    job_walltime: "6:00:00"
    logs_folder: logs_en
    n_cpu: "1"

  submission:
    !PBSQueue
      jobs_folder: jobs_en
      job_name_key: job_name
      #fake_submission: true

  constants:
    - &DOSAGE "/gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/data/geuvadis_eur_hg38/dosage/chr*.txt.gz"
    - &SAMPLES /gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/data/geuvadis_eur_hg38/dosage/samples.txt
    - &MODEL_FOLDER /gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/models_v1/eqtl/elastic_net_models
    - &RESULTS_FOLDER results/en
  #Kind of ugly kink... need to add support for configurable inline template to pick up from configuration, to avoid duplicating "results"
  pre_command:
  - '[ -d results/en ] || mkdir -p results/en'


arguments:
  - !Scalar { name: verbosity, prefix: --verbosity, value: 9 }

  - !Scalar { name: text_genotypes, prefix: --text_genotypes, value: *DOSAGE }

  - !Scalar { name: text_sample_ids, prefix: --text_sample_ids, value: *SAMPLES }

  - !Scalar { value: --throw }

  - !FilesInFolder
    name: model_db_path
    prefix: --model_db_path
    sort: true
    folder: *MODEL_FOLDER
    regexp_filter: "en_(.*).db"
    metadata_rules: [ !ExtractFromFileNameRegexpMetadata { path: tissue } ]

  - !ArgumentFromMetadata
    name: prediction_output
    prefix: "--prediction_output"
    prepend: *RESULTS_FOLDER
    format_rule: "predicted_{tissue}.txt"
    sources: [ { path: tissue, destination: tissue } ]

  - !ArgumentFromMetadata
    name: prediction_summary_output
    prefix: "--prediction_summary_output"
    prepend: *RESULTS_FOLDER
    format_rule: "summary_{tissue}.txt"
    sources: [ { path: tissue, destination: tissue } ]

  - !ArgumentFromMetadata
    name: "job_name"
    format_rule: "{tissue}_predixcan_en"
    sources: [ { path: tissue, destination: tissue } ]