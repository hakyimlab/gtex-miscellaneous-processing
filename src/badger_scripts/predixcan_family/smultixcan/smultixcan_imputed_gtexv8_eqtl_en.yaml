---
definitions:
  command: "python3 /gpfs/data/im-lab/nas40t2/abarbeira/software/MetaXcan/software/SMulTiXcan.py"

  template: smultixcan.jinja
  default_arguments:
    job_memory: "10gb"
    job_walltime: "48:00:00"
    logs_folder: logs_smp
    n_cpu: 1
    python_version: "3.5.3"

  submission:
    !PBSQueue
      jobs_folder: jobs_smp
      job_name_key: job_name
      #fake_submission: true

  constants:
    gwas_folder: &GWAS_FOLDER /gpfs/data/im-lab/nas40t2/Data/SummaryResults/imputed_gwas_hg38_1.1
    models_folder: &MODELS_FOLDER /gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/models_v1/eqtl/elastic_net_models
    models_name_pattern: &MODELS_NAME_PATTERN '"en_(.*).db"'
    metaxcan_folder: &METAXCAN_FOLDER /gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/predixcan_family/spredixcan_v1/eqtl/sp_imputed_gwas_gtexv8_en
    metaxcan_file_name_pattern: &METAXCAN_FILE_NAME_PARSE_PATTERN '"spredixcan_igwas_gtexenv8_(.*)__PM__(.*).csv"'
    metaxcan_filter_pattern: &METAXCAN_FILTER_PATTERN '"spredixcan_igwas_gtexenv8_{study}__PM__(.*).csv"'
    snp_covariance: &SNP_COVARIANCE /gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/models_v1/eqtl/meta_covariance/en/gtex_v8_snp_covariance.txt.gz
    cutoff_condition_number: &CUTOFF_CONDITION_NUMBER "30"
    #whitelist: &WHITELIST /gpfs/data/im-lab/nas40t2/abarbeira/projects/gtex_v8/data/kosher_whitelist.txt

    results_folder: &RESULTS_FOLDER results/smp_v8
  #Kind of ugly kink... need to add support for configurable inline template to pick up from configuration, to avoid duplicating "results"
  pre_command:
  - '[ -d results/smp_v8 ] || mkdir -p results/smp_v8'

arguments:
#  - !Range { name: study, file_list: *WHITELIST,
#      metadata_rules: [ !SaveValueInMetadata { path: gwas/tag } ]
#   }

  - !FilesInFolder
    name: gwas_file
    prefix: --gwas_file
    sort: true
    folder: *GWAS_FOLDER
    regexp_filter: "imputed_(.*).txt.gz"
    metadata_rules: [ !ExtractFromFileNameRegexpMetadata { path: gwas/tag } ]

  #- !Whitelist { list_from_file: *WHITELIST, in_metadata_path: "gwas/tag" }
  #- !Whitelist { from_list:["GLGC_Mc_HDL", "GLGC_Mc_LDL", "GLGC_Mc_TG"], in_metadata_path: "gwas/tag" }

  - !Scalar { value: "--snp_column variant_id --effect_allele_column effect_allele --non_effect_allele_column non_effect_allele --zscore_column zscore"}

  - !Scalar { name: models_folder, prefix: "--models_folder", value: *MODELS_FOLDER }

  - !Scalar { name: models_name_pattern, prefix: --models_name_pattern, value: *MODELS_NAME_PATTERN }

  - !Scalar { name: snp_covariance, prefix: "--snp_covariance", value: *SNP_COVARIANCE }

  - !Scalar { name: metaxcan_folder, prefix: "--metaxcan_folder", value: *METAXCAN_FOLDER }

  - !Scalar { name: metaxcan_file_name_parse_pattern, prefix: "--metaxcan_file_name_parse_pattern", value: *METAXCAN_FILE_NAME_PARSE_PATTERN }

  - !Scalar { name: cutoff_condition_number, prefix: "--cutoff_condition_number", value: *CUTOFF_CONDITION_NUMBER,
    metadata_rules: [ !SaveValueInMetadata { path: run/condition_number } ]
   }

  - !ArgumentFromMetadata
    name: metaxcan_filter
    prefix: "--metaxcan_filter"
    format_rule: *METAXCAN_FILTER_PATTERN
    sources: [ {path: gwas/tag, destination: study} ]

  - !Scalar { name: verbosity, prefix: "--verbosity", value: "7" }

  #TODO: metadata rule that stores value, so that we pick the condition number
  - !ArgumentFromMetadata
    name: output
    prefix: "--output"
    prepend: *RESULTS_FOLDER
    format_rule: "smultixcan_imputed_gwas_gtexelv8_{study}_ccn{condition_number}.txt"
    sources: [ {path: gwas/tag, destination: study},
               {path: run/condition_number, destination: condition_number }]

  - !ArgumentFromMetadata
    name: "job_name"
    format_rule: "smultixcan_imputed_gwas_gtexelv8_{study}_ccn{condition_number}"
    sources: [ {path: gwas/tag, destination: study},
               {path: run/condition_number, destination: condition_number }]